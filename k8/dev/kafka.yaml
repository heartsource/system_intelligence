apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: si-app-dev
  labels:
    app: kafka
spec:
  ports:
  - protocol: TCP
    port: 9092
    name: kafka
    targetPort: 9092
  type: ClusterIP
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: si-app-dev
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:latest
        ports:
        - containerPort: 9092
        volumeMounts:
        - name: kafka-storage
          mountPath: /var/lib/kafka
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-0.kafka.si-app-dev.svc.cluster.local:9092
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "2"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "kafka-server-stop"]
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi
      storageClassName: managed-premium-rw
